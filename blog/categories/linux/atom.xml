<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | itoutline.me]]></title>
  <link href="http://itoutline.me/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://itoutline.me/"/>
  <updated>2019-06-27T20:25:51+00:00</updated>
  <id>http://itoutline.me/</id>
  <author>
    <name><![CDATA[itoutline.me]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Iptables i dynamiczne IP]]></title>
    <link href="http://itoutline.me/2015/10/18/iptables-i-dynamiczne-ip/"/>
    <updated>2015-10-18T21:29:23+00:00</updated>
    <id>http://itoutline.me/2015/10/18/iptables-i-dynamiczne-ip</id>
    <content type="html"><![CDATA[<p>W przypadku posiadania serwera w sieci Internet zawsze najlepiej jest ograniczać do niego dostęp tylko do tego co rzeczywiście chcemy, żeby było na nim dostępne. Dodatkowo ograniczenie do konkretnych klas czy adresów w przypadku dostępu do interfejsów umożliwiających większą kontrolę nad serwerem jest także dobrą praktyką (jeszcze lepszą jest nie eksponowanie ich w Internecie w ogóle;)</p>

<p>Ostatnio prowadziłem testy na takim serwerze i naturalnym było np. ograniczenie dostępu do SSH dla konkretnych adresów. Problem polega na tym, że o ile w firmie miałem statyczny adres to w domu już nie. Mogłem ustawić regułę na obecny domowy adres ale za kilka godzin mogła być już nieaktualna. Wyjściem z sytuacji okazał się, jak bardzo często się zdarza, prosty skrypt i dyndns.</p>

<pre><code class="bash iptables_update.sh">#!/bin/bash
# --==itoutline.me==--

HOSTALLOWED="/home/itoutline/update_iptables/allowed_host.txt"

while read line
do

  HOSTNAME=$line
  LOGFILE=/home/itoutline/update_iptables/"$line".log

  Current_IP=$(host $HOSTNAME | cut -f4 -d' ')

  if [ $LOGFILE == "" ] ; then
    iptables -I INPUT -s $Current_IP -j ACCEPT
    echo $Current_IP &gt; $LOGFILE
  else

    Old_IP=$(cat $LOGFILE)

    if [ "$Current_IP" != "$Old_IP" ] ; then
      iptables -D INPUT -s $Old_IP -j ACCEPT
      iptables -I INPUT -s $Current_IP -j ACCEPT
      /etc/init.d/iptables save
      echo $Current_IP &gt; $LOGFILE
      echo iptables have been updated
    fi
  fi
done &lt; "$HOSTALLOWED"
</code></pre>

<p>W <code>allowed_host.txt</code> umieszczamy w kolejnych liniach nazwy domenowe hostów.</p>

<p>A do cron-a dodajemy linijkę:
<code>
*/1 * * * * /home/itoutline/update_iptables/update_iptables.sh  2&gt;&amp;1 |logger
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unblock.us automatyczna aktualizacja]]></title>
    <link href="http://itoutline.me/2015/10/07/unblock-dot-us-automatyczna-aktualizacja/"/>
    <updated>2015-10-07T23:17:18+00:00</updated>
    <id>http://itoutline.me/2015/10/07/unblock-dot-us-automatyczna-aktualizacja</id>
    <content type="html"><![CDATA[<p>Wchodzenie na stronę unblock.us i aktualizowanie bieżącego adresu IP zaczęło mnie naprawdę męczyć. Na szczęście można tego uniknąć dosyć prosto. Wystarczy prosty skrypt na routerze (czy dowolnym serwerze linuxowym jaki mamy w domu, chyba każdy ma coś na poziomie minimum rpi w dzisiejszych czasach ;), który będzie sprawdzał co jakiś czas adres zewnętrzny i aktualizował go w unblock.us.</p>

<pre><code class="bash update_unblock.sh">#!/usr/bin/env bash
# --==itoutline.me==--

SCRIPT_NAME="$(basename $0)"
IP_ADDR=/tmp/active_ip_addr
IP_STATUS=/tmp/ip_update_status

CURRENT_IP=$(dig +short myip.opendns.com @resolver1.opendns.com)

function update_ip {
    curl -s -o $IP_STATUS "https://api.unblock-us.com/login?adres_email:hasło"
    logger "[$SCRIPT_NAME]: IP updated: $CURRENT_IP; Response: $(cat $IP_STATUS)"
    echo $CURRENT_IP &gt; $IP_ADDR
}

if [[ "$CURRENT_IP" =~ ^[0-9]{2,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]] ; then
    if [ ! -f $IP_ADDR ] ; then
        update_ip
    else
        OLD_IP=$(cat $IP_ADDR)
        if [[ "$CURRENT_IP" != "$OLD_IP" ]] ; then
            update_ip
        fi
    fi
else
    logger "[$SCRIPT_NAME]: Network error or incorrect answer from the IP provider"
fi
</code></pre>

<p>W miejscach <code>adres_email</code> i <code>hasło</code> trzeba podać swoje dane oraz dorzucić skrypt do crona.</p>

<pre><code>*/2 * * * * /root/update_unblock.sh  2&gt;&amp;1 |logger
</code></pre>

<p>Skrypt będzie się wykonywał co dwie minuty.</p>

<p>Skrypt można również wykorzystać do innych serwisów, w przypadku darmowego <a href="http://tvunblock.com">tvunblock.com</a> polecenie <code>curl</code> z funkcji <code>update_ip</code> należałoby zastąpić:</p>

<pre><code>curl -s -o $IP_STATUS "https://activate.tvunblock.com/"
</code></pre>

<h3>Zastąpienie odpytywania zewnętrznego serwisu o publiczny adres IP</h3>

<p>Serwisów dostarczających za pomocą jakiegoś web api zewnętrzny adres ip jest dużo ale nie zawsze trzeba z nich korzystać. Jeśli router/modem pozwala na pobieranie z niego informacji o adresie WAN, dlaczego tego nie użyć? W przypadku Liveboxa/Funboxa zmienną <code>CURRENT_IP</code> można ustawić w ten sposób:</p>

<pre><code>CURRENT_IP=$(curl -silent -A "application/x-sah-ws-4-call+json" "http://192.168.1.1/sysbus/NMC:getWANStatus" -d"{\"parameters\":{}}" | sed -n -e 's/^.*\(IPAddress":"\)\([0-9]*.[0-9]*.[0-9]*.[0-9]*\)\(.*\)$/\2/p')
</code></pre>

<p>W praktyce (jak widać nie tylko adres ip portu WAN można podejrzeć):</p>

<p><img src="/images/unblock_skrypt.png"></p>

<h3>Crontab tuning</h3>

<p>Rozwiązania, które opierają się na crontabie i czesto są uruchamiane zaśmiecają sysloga:</p>

<pre><code>Nov  8 16:49:01 bananapi /USR/SBIN/CRON[27209]: (root) CMD (/root/update_unblock.sh  2&gt;&amp;1 |logger)
Nov  8 16:51:01 bananapi /USR/SBIN/CRON[27221]: (root) CMD (/root/update_unblock.sh  2&gt;&amp;1 |logger)
Nov  8 16:53:01 bananapi /USR/SBIN/CRON[27233]: (root) CMD (/root/update_unblock.sh  2&gt;&amp;1 |logger)
Nov  8 16:55:01 bananapi /USR/SBIN/CRON[27244]: (root) CMD (/root/update_unblock.sh  2&gt;&amp;1 |logger)
Nov  8 16:57:01 bananapi /USR/SBIN/CRON[27255]: (root) CMD (/root/update_unblock.sh  2&gt;&amp;1 |logger)
Nov  8 16:59:01 bananapi /USR/SBIN/CRON[27266]: (root) CMD (/root/update_unblock.sh  2&gt;&amp;1 |logger)
</code></pre>

<p>Dlatego kiedy już wiadomo, że skrypt działa poprawnie można pokusić się o wyłączenie logowania crona. Na Debianie to modyfikacja pliku <code>/etc/rsyslog.conf</code>:</p>

<pre><code class="bash rsyslog.conf">###############
#### RULES ####
###############

#
# First some standard log files.  Log by facility.
#
auth,authpriv.*         -/var/log/auth.log
*.*;auth,authpriv.none,cron.none        -/var/log/syslog
#cron.*             -/var/log/cron.log
daemon.*            -/var/log/daemon.log
kern.*              -/var/log/kern.log
lpr.*               -/var/log/lpr.log
mail.*              -/var/log/mail.log
user.*              -/var/log/user.log
</code></pre>

<p>Dorzucenie <code>cron.none</code> i restart usługi <code>sudo /etc/init.d/rsyslog restart</code> wyciszy crontaba. Można również przekierować logi do osobnego pliku <code>cron.log</code> ale szkoda karty SD. Od tej pory syslog nie jest floodowany z powodu skryptu i mamy tylko informacje kiedy faktcznie skrypt wykona jakąś pracę:</p>

<pre><code>Nov  8 20:16:02 bananapi logger: [update_unblock.sh]: IP updated: 178.42.100.100; Response: active
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jump Desktop i Centos]]></title>
    <link href="http://itoutline.me/2013/12/15/jump-desktop-i-centos/"/>
    <updated>2013-12-15T23:17:00+00:00</updated>
    <id>http://itoutline.me/2013/12/15/jump-desktop-i-centos</id>
    <content type="html"><![CDATA[<p>Jump Desktop to naprawdę przyjemny klient RDP i VNC na OSX, IOS i Androida. Zaczynamy od sprawdzenia czy server VNC jest zainstalowany:</p>

<pre><code>rpm -qa \*vnc\*
</code></pre>

<p>Jeśli nie będzie pakietu <code>tigervnc-server</code>, instalujemy go:</p>

<pre><code>yum install tigervnc-server
</code></pre>

<p>Konfiguracje serwera VNC na Centos 6.5 rozpoczynamy od edycji pliku <code>sudo vi /etc/sysconfig/vncservers</code>:</p>

<pre><code>VNCSERVERS="1:itoutline"
VNCSERVERARGS[1]="-geometry 1280x900 -localhost"
</code></pre>

<p>W zmiennej <code>VNCSERVERS</code> podajemy identyfikator ekranu i nazwę użytkownika a w <code>VNCSERVERARGS</code> parametry połączenia. <code>-localhost</code> powoduje, że możliwe będzie tylko nawiązywanie połaczeń lokalnych (z wykorzytaniem tunelu SSH). W sumie zdalny dostęp za pomocą &ldquo;czystego&rdquo; VNC jest mało rozsądny.</p>

<!-- more -->


<p>Ustawienie hasła VNC dla użytkownika (bez tego server VNC nie chce się uruchomić):</p>

<pre><code>su - itoutline
vncpasswd
</code></pre>

<p>Włączenie uruchamiania serwera VNC po każdym restarcie i uruchomienie go:</p>

<pre><code>chkconfig vncserver on
service vncserver start
</code></pre>

<p>Konfiguarcję połączenia w Jump Desktop rozpoczynamy od zdefiniowania połączenia SSH w ustawieniach globalnych (jak widać użyłem niestandardowego portu 2001):</p>

<p><img src="/images/jump-ssh-servers.png"></p>

<p>W konfiguracji serwera podajemy utworzony tunel SSH:</p>

<p><img src="/images/jump-server-config-ssh.png"></p>

<p>Na końcu podajemy adres naszego serwera, tutaj oczywiście wprowadzamy localhost ponieważ łączymy się za pomocą zestawionego wcześniej tunelu.</p>

<p><img src="/images/jump-server-config.png"></p>

<p>Port na którym będziemy się łaczyć to 5901 ponieważ użytkownik zdefiniowany w <code>/etc/sysconfig/vncservers</code> miał identyfikator 1. VNC standardowo pracuje na porcie 5900 ale wykorzystujac wspomniany plik i identyfikatory ekranów  przypisujemy im kolejne porty po 5900.</p>

<p>Gdyby ktoś chciał zmienić standardowy port na którym pracuje VNC, można go zmodyfikować w pliku <code>/usr/bin/vncserver</code></p>

<pre><code>$vncPort = 5900 + $displayNumber;
</code></pre>

<p>Ustawnie portu na np. 5905 spowoduje, że użytkownik o identyfikatorze ekranu 2, będzie się łączył na port 5907.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lirc i Raspberry Pi]]></title>
    <link href="http://itoutline.me/2013/07/13/lirc-i-raspberry-pi/"/>
    <updated>2013-07-13T19:47:28+00:00</updated>
    <id>http://itoutline.me/2013/07/13/lirc-i-raspberry-pi</id>
    <content type="html"><![CDATA[<p>Po dłuższym okresie czasu postanowiłem odkurzyć Harmony 900, od kiedy przesiadłem się na ATV zostałem przy natywnym pilocie do tego urządzenia. Trochę niesamowite jak fajny jest pilot do Apple Tv, jedyne czego mu brakuje to możliwość regulacji głośności. Przy okazji pomyślałem, że sprawdzę jak wygląda sytuacja z Lirc-em na RPi i okazuje się, że jest bardzo dobrze.</p>

<h3>Podłączenie odbiornika IR</h3>

<p>W swoim &ldquo;magazynku&rdquo; znalazłem czujnik TSOP34836 i przyznam, że wykorzystałem ten bo akurat taki miałem&hellip; Działa na zalecanym napięciu 3V (od 2,7 do 5,5V) i maksymalnie pobiera 3mA (w trakcie moich testów nie przekroczył 1,25mA), czyli nie powinien być żadnym problemem dla portu GPIO.</p>

<p><img src="/images/rpi-lirc-tsop-ilustracja1.png"></p>

<p>Podłączyłem go w następujący sposób:</p>

<ul>
<li>Pin 1 - Pin 16 (GPIO 23 RPi)</li>
<li>Pin 2 - Pin 14 (GND RPi)</li>
<li>Pin 3 - Pin 1 (3,3V RPi)</li>
</ul>


<!-- more -->


<p><img src="/images/rpi-lirc-tsop34836.jpg"></p>

<h3>Konfiguracja RPi</h3>

<p>Instalacja Lirc-a:</p>

<pre><code>sudo apt-get update
sudo apt-get install lirc
</code></pre>

<p>Dodanie sterowników do <code>sudo vi /etc/modules</code>:</p>

<pre><code>lirc_dev
lirc_rpi gpio_in_pin=23 gpio_out_pin=22
</code></pre>

<p><code>gpio_in_pin=23</code> do pinu 23 podłączymy odbiornik podczerwieni a do 22 <code>gpio_out_pin=22</code> nadajnik. Po wydaniu polecenia <code>sudo modprobe lirc_rpi</code> sterowniki powinny się załadować. Można to sprawdzić za pomocą polecenia <code>lsmod | grep lirc</code>, powinniśmy zobaczyć coś takiego:</p>

<pre><code>% lsmod | grep lirc
lirc_rpi                7266  3
lirc_dev               10156  1 lirc_rpi
</code></pre>

<p>Następnie w pliku <code>sudo vi /etc/lirc/hardware.conf</code> umieszczamy poniższą zawartość:</p>

<p><figure class='code'><figcaption><span> (hardware.conf)</span> <a href='/downloads/code/hardware.conf'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">########################################################</span>
</span><span class='line'><span class="c"># /etc/lirc/hardware.conf</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Arguments which will be used when launching lircd</span>
</span><span class='line'><span class="nv">LIRCD_ARGS</span><span class="o">=</span><span class="s2">&quot;--uinput&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Don&#39;t start lircmd even if there seems to be a good config file</span>
</span><span class='line'><span class="c"># START_LIRCMD=false</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Don&#39;t start irexec, even if a good config file seems to exist.</span>
</span><span class='line'><span class="c"># START_IREXEC=false</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Try to load appropriate kernel modules</span>
</span><span class='line'><span class="nv">LOAD_MODULES</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Run &quot;lircd --driver=help&quot; for a list of supported drivers.</span>
</span><span class='line'><span class="nv">DRIVER</span><span class="o">=</span><span class="s2">&quot;default&quot;</span>
</span><span class='line'><span class="c"># usually /dev/lirc0 is the correct setting for systems using udev</span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span><span class="s2">&quot;/dev/lirc0&quot;</span>
</span><span class='line'><span class="nv">MODULES</span><span class="o">=</span><span class="s2">&quot;lirc_rpi&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Default configuration files for your hardware if any</span>
</span><span class='line'><span class="nv">LIRCD_CONF</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="nv">LIRCMD_CONF</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="c">########################################################</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>W kolejnym kroku musimy skonfigurować jakiegoś pilota w pliku <code>sudo vi /etc/lirc/lircd.conf</code>. Ja akurat znalazłem w &ldquo;szufladzie&rdquo; coś takiego (opisany jako Microsoft Model 1039):</p>

<p><img src="/images/rpi-lirc-mce-1039.jpg"></p>

<p>Pliki konfiguracyjne do naprawdę wielu różnych pilotów można pobrać z <a href="http://lirc.sourceforge.net/remotes/">http://lirc.sourceforge.net/remotes/</a>. Niestety są one różnej jakości, dlatego mimo wszystko postanowiłem przygotować swój za pomoca polecenia <code>sudo irrecord  -d /dev/lirc0 my_mce.conf</code> ;) Trzeba przyznać, że proces jest dosyć żmudny ale w rezultacie wygenerowałem plik oparty na protokole RC6 (bardzo nie lubię plików RAW, są mocno nieprecyzyjne i pilot może działać różnie. Chociaż czasami nie ma wyjścia jeśli producent użył jakiegoś abstrakcyjnego protokolu IR). Wygląda on tak:</p>

<p><figure class='code'><figcaption><span> (my_mce.conf)</span> <a href='/downloads/code/my_mce.conf'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'># Please make this file available to others
</span><span class='line'># by sending it to &lt;lirc@bartelmus.de&gt;
</span><span class='line'>#
</span><span class='line'># this config file was automatically generated
</span><span class='line'># using lirc-0.9.0-pre1(default) on Thu Jul 11 13:36:11 2013
</span><span class='line'>#
</span><span class='line'># contributed by itoutline.me
</span><span class='line'>#
</span><span class='line'># brand:                      Harmony 900 (device profile MCE-1039)
</span><span class='line'># model no. of remote control: fully compatible with OEM MCE 1039 (P/N X801143-102)
</span><span class='line'># devices being controlled by this remote:
</span><span class='line'>#
</span><span class='line'># Tested on RPi with TSOP34836 connected to gpio_in_pin 23
</span><span class='line'>
</span><span class='line'>begin remote
</span><span class='line'>
</span><span class='line'>  name MCE
</span><span class='line'>  bits           13
</span><span class='line'>  flags RC6|CONST_LENGTH
</span><span class='line'>  eps            30
</span><span class='line'>  aeps          100
</span><span class='line'>  header       2677   873
</span><span class='line'>  one           466   419
</span><span class='line'>  zero          466   419
</span><span class='line'>  pre_data_bits   24
</span><span class='line'>  pre_data       0x1BFF83
</span><span class='line'>  gap          105884
</span><span class='line'>  min_repeat      3
</span><span class='line'>#  suppress_repeat 3
</span><span class='line'>#  uncomment to suppress unwanted repeats
</span><span class='line'>  toggle_bit_mask 0x8000
</span><span class='line'>  rc6_mask    0x100000000
</span><span class='line'>
</span><span class='line'>      begin codes
</span><span class='line'>          KEY_1                    0x1BFE
</span><span class='line'>          KEY_2                    0x1BFD
</span><span class='line'>          KEY_3                    0x1BFC
</span><span class='line'>          KEY_4                    0x1BFB
</span><span class='line'>          KEY_5                    0x1BFA
</span><span class='line'>          KEY_6                    0x1BF9
</span><span class='line'>          KEY_7                    0x1BF8
</span><span class='line'>          KEY_8                    0x1BF7
</span><span class='line'>          KEY_9                    0x1BF6
</span><span class='line'>          KEY_0                    0x1BFF
</span><span class='line'>          KEY_BLUE                 0x1BA1
</span><span class='line'>          KEY_RED                  0x1BA4
</span><span class='line'>          KEY_GREEN                0x1BA3
</span><span class='line'>          KEY_YELLOW               0x1BA2
</span><span class='line'>          KEY_MENU                 0x1BDB #&#39;Movies&#39; on Harmony 900 LCD and &#39;DVD Menu&#39; on MCE 1039 Remote
</span><span class='line'>          KEY_INFO                 0x1BF0
</span><span class='line'>          KEY_EXIT                 0x1BDC #&#39;Back&#39; on Harmony 900 LCD and MCE 1039 Remote
</span><span class='line'>          KEY_UP                   0x1BE1
</span><span class='line'>          KEY_DOWN                 0x1BE0
</span><span class='line'>          KEY_LEFT                 0x1BDF
</span><span class='line'>          KEY_RIGHT                0x1BDE
</span><span class='line'>          KEY_OK                   0x1BDD
</span><span class='line'>          KEY_VOLUMEDOWN           0x1BEE
</span><span class='line'>          KEY_VOLUMEUP             0x1BEF
</span><span class='line'>          KEY_MUTE                 0x1BF1
</span><span class='line'>          KEY_START                0x1BF2
</span><span class='line'>          KEY_CHANNELDOWN          0x1BEC
</span><span class='line'>          KEY_CHANNELUP            0x1BED
</span><span class='line'>          KEY_PLAY                 0x1BE9
</span><span class='line'>          KEY_PAUSE                0x1BE7
</span><span class='line'>          KEY_RECORD               0x1BE8
</span><span class='line'>          KEY_STOP                 0x1BE6
</span><span class='line'>          KEY_REWIND               0x1BEA
</span><span class='line'>          KEY_FORWARD              0x1BEB
</span><span class='line'>          KEY_PREVIOUS             0x1BE4
</span><span class='line'>          KEY_NEXT                 0x1BE5
</span><span class='line'>          KEY_ASCPECT              0x7BD8
</span><span class='line'>          KEY_RECORDEDTV           0x1BB7
</span><span class='line'>          KEY_LIVETV               0x1BDA
</span><span class='line'>          KEY_MYRADIO              0x7BAF
</span><span class='line'>          KEY_MYMUSIC              0x1BB8
</span><span class='line'>          KEY_MYPICTURES           0x1BB6
</span><span class='line'>          KEY_MYVIDEO              0x1BB5
</span><span class='line'>          KEY_AUDIO                0x7BB3
</span><span class='line'>          KEY_CLEAR                0x1BF5
</span><span class='line'>          KEY_ENTER                0x1BF4
</span><span class='line'>          KEY_NUMERIC_STAR         0x7BE2
</span><span class='line'>          KEY_NUMERIC_POUND        0x7BE3
</span><span class='line'>          KEY_AUDIO                0xEBB8
</span><span class='line'>          KEY_POWER                0x7BF3
</span><span class='line'>          KEY_OFF                  0x7BD5
</span><span class='line'>          KEY_ON                   0x7BD6
</span><span class='line'>          KEY_TELETEXT             0x1BA5
</span><span class='line'>          KEY_SUBTITLE             0x7BB2
</span><span class='line'>          KEY_GUIDE                0x7BD9
</span><span class='line'>      end codes
</span><span class='line'>end remote
</span></code></pre></td></tr></table></div></figure></p>

<p>Jak widać jest tutaj trochę zamieszane a to dlatego, że powyższy plik w pełni obsługuje również profil &ldquo;MCE-1039&rdquo; zdefiniowany na Harmony 900:</p>

<p><img src="/images/rpi-lirc-harmony-select-device.png"></p>

<p>Czyli pilot ze zdjęcia powyżej działa prawidłowo jak i Harmony 900 ze zdefiniowanym urzadzeniem &ldquo;MCE-1039&rdquo;. W przypadku Harmony jest sporo dodatkowych przycisków, których nie ma na moim pilocie &ldquo;Microsoft Model 1039&rdquo;.</p>

<p>Kopiujemy wygenerowany plik (lub pobrany z sieci do naszego pilota) w miejsce <code>/etc/lirc/lircd.conf</code> i można uruchamiać Lirc-a <code>sudo /etc/init.d/lirc start</code></p>

<p><img src="/images/rpi-lirc-start.png"></p>

<p>Za pomocą polecenia <code>irw</code> możemy sprawdzić czy rzeczywiście polcenia wysyłane przez pilota są odbierane przez Lirc-a:</p>

<p><img src="/images/rpi-lirc-irw.png"></p>

<p>U mnie dopiero po restarcie RPi zaczęło to działać.</p>

<h3>Go deep</h3>

<p>Z uwagi na to, że mam akurat pod ręką oscyloskop postanowiłem zobaczyć jak w rzeczywistości wygląda jakieś polecenie, trafiło na KEY_DOWN 0x1BE0 = 110111110000. Sondę podłączyłem bezpośrednio do wyjścia odbiornika IR.</p>

<p>Przebieg wygląda następująco (RC6 używa &ldquo;Manchester Encoding&rdquo; do kodowania sygnału):</p>

<p><img src="/images/key_down_mce_rc6.png"></p>

<p>Ostatnie 13 bitów to kod polecenia (pokrywa się to z tym co mamy w lircd.conf), następnie są 24 &ldquo;pre_data_bits&rdquo; i po ich konwersji do hex otrzymujemy 0x1BFF83 czyli wartość &ldquo;pre_data&rdquo;.</p>

<p>W sumie wszystko by się zgadzało :)</p>

<h3>Problemy</h3>

<ul>
<li>Jeśli wygrzebaliśmy pilota z &ldquo;szuflady&rdquo; to zaczynamy od sprawdzenia czy generuje w ogóle jakiś sygnał. Potrzebne jest do tego tak specjalistyczne narzędzie jak telefon z aparatem ;) Naciskanie przycisków powinno powodować pojawienie się fioletowego światła na ekranie telefonu. Szanse na to, że pilot wysyła sygnał ale jest on nieprawidłowy są bliskie 0.</li>
</ul>


<p><img src="/images/rpi-lirc-phone1.jpg" width="400"></p>

<ul>
<li>Kolejnym krokiem jest sprawdzenie czy sterowniki są poprawnie zainstalowane, czyli <code>lsmod</code>. U mnie wygląda to tak:</li>
</ul>


<p><img src="/images/rpi-lirc-lsusb.png"></p>

<ul>
<li>Jeśli <code>irw</code> nic nie wyświetla warto sprawdzić czy coś w ogóle dociera do portu RPi za pomocą polecenia <code>mode2 -d /dev/lirc0</code>, wcześniej trzeba zatrzymać Lirc-a <code>sudo /etc/init.d/lirc stop</code>. Jeżeli zobaczymy tam jakieś dane to znaczy, że Lirc i konfiguracja pilota zdefiniowana w <code>/etc/lirc/lircd.conf</code> nie do końca chce współpracować z pilotem który mamy.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH tips]]></title>
    <link href="http://itoutline.me/2013/03/31/ssh-tips/"/>
    <updated>2013-03-31T17:17:08+00:00</updated>
    <id>http://itoutline.me/2013/03/31/ssh-tips</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/OpenSSH_logo-e1365113790448.png"></p>

<p>Kilka usprawnień i wskazówek ułatwiających korzystanie z SSH.</p>

<h4>Konfiguracja hostów zdalnych</h4>

<p>Korzystanie z pliku <code>~/.ssh/config</code> ułatwia łączenie się ze zdalnymi hostami. Wystarczy wpisać <code>ssh</code>, pierwszą literę hosta i wcisnąć klawisz  ⇥ tab. Nie trzeba pamiętać o porcie, użytkowniku, parametrach połączenia. <code>ForwardX11 yes</code> umożliwia uruchamianie aplikacji graficznych (oczywiście musimy mieć uruchomiony na kliencie serwer X-ów). Poniżej przykładowy plik:</p>

<pre><code>Host centos-01
HostName 192.168.1.190
User itoutline
ForwardX11 yes

Host openwrt
Hostname 192.168.1.1
User root

Host appletv
Hostname 192.168.1.60
User root

Host workstation
Hostname 192.168.1.1
Port 8511
User itoutline
</code></pre>

<h4>Automatyczne logowanie</h4>

<p>Umieszczenie naszego klucza publicznego w pliku <code>~/.ssh/authorized_keys</code> na serwerze umożliwia zalogowanie się bez użycia hasła. Najpierw musimy wygenerować parę kluczy np.:</p>

<pre><code>[itoutline@centos-01 ~]$ ssh-keygen -t rsa -C "itoutline@centos-01"
Generating public/private rsa key pair.
Enter file in which to save the key (/home/itoutline/.ssh/id_rsa):
Created directory '/home/itoutline/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/itoutline/.ssh/id_rsa.
Your public key has been saved in /home/itoutline/.ssh/id_rsa.pub.
The key fingerprint is:
81:c4:99:69:cd:c5:39:d8:01:26:f7:bd:05:3a:bd:df itoutline@centos-01
The key's randomart image is:
+--[ RSA 2048]----+
|     .o*+*oo.    |
|     .*=+.=+ .   |
|     .. . +.o .  |
|         . . +   |
|        S   o    |
|             . . |
|              . E|
|                 |
|                 |
+-----------------+
</code></pre>

<p>Niepodanie &ldquo;passphrase&rdquo; podczas generowania kluczy spowoduje, że zawsze będziemy mogli zalogować się na zdalnego hosta. Ma to jednak zasadniczy minus, ktoś kto zdobędzie nasz klucz prywatny zapisany w pliku <code>/home/itoutline/.ssh/id_rsa</code> zaloguje się bezproblemowo wszędzie tam gdzie dodaliśmy nasz klucz publiczny do <code>~/.ssh/authorized_keys</code>. Trochę jak zapisanie hasła w pliku tekstowym&hellip;</p>

<p>Pozostaje skopiowanie klucza publiczngo na zdalny serwer, można to zrobić np. za pomocą <code>ssh-copy-id</code>:</p>

<pre><code>[itoutline@centos-01 ~]$ ssh-copy-id centos-03
The authenticity of host 'centos-03 (192.168.1.200)' can't be established.
RSA key fingerprint is 5b:85:ee:ee:d5:12:a3:f1:fe:10:5f:4d:66:f5:e5:7a.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'centos-03' (RSA) to the list of known hosts.
itoutline@centos-03's password:
Now try logging into the machine, with "ssh 'centos-03'", and check in:

  .ssh/authorized_keys

to make sure we haven't added extra keys that you weren't expecting.
</code></pre>

<p>W przypadku kiedy ssh nasłuchuje na porcie innym niż standardowy można użyć polecenia</p>

<p><code>ssh-copy-id -i ~/.ssh/id_rsa.pub "-p 2222 itoutline@centos-03"</code></p>

<p>Jeśli mamy więcej niż jeden klucz publiczny w katalogu <code>~/.ssh</code> warto podać jego nazwę (jak w ostatnim przykładzie) ponieważ <code>ssh-copy-id</code> kopiuje wszystkie jakie znajdzie.</p>

<p>Jeśli na kliencie polecenie <code>ssh-copy-id</code> jest niedostępne, można wykorzystać poniższego one-linera:</p>

<p> <code>cat ~/.ssh/id_rsa.pub | ssh itoutline@centos-03 “mkdir ~/.ssh; cat &gt;&gt; ~/.ssh/authorized_keys”</code></p>

<p>Jeśli zdecydujemy się na używanie &ldquo;passphrase&rdquo; z pomocą przyjdzie nam <code>ssh-agent</code>, umożliwia on zapamiętanie naszego klucza prywatnego poświadczonego &ldquo;passphrase&rdquo; do czasu np. restartu hosta.</p>

<p>Przykładowy kod dodany do <code>.bash_profile</code> lub <code>.bashrc</code> załatwiający obsługę <code>ssh-agent</code>.</p>

<pre><code class="bash Obsluga ssh-agent w .bash_profile">SSH_ENV=$HOME/.ssh/environment

function start_agent {
     echo "Initialising new SSH agent..."
     /usr/bin/ssh-agent | sed 's/^echo/#echo/' &gt; ${SSH_ENV}
     echo succeeded
     chmod 600 ${SSH_ENV}
     . ${SSH_ENV} &gt; /dev/null
     /usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
     . ${SSH_ENV} &gt; /dev/null
     #ps ${SSH_AGENT_PID} doesn't work under cywgin
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ &gt; /dev/null || {
         start_agent;
     }
else
     start_agent;
fi
</code></pre>

<p>Teraz kiedy po raz pierwszy zalogujemy się na centos-01, zobaczymy coś takiego:</p>

<pre><code>[itoutline.sputnik: itoutline]$ ssh centos-01
Last login: Sun Mar 31 11:17:17 2013 from sputnik.local
Initialising new SSH agent...
succeeded
Enter passphrase for /home/itoutline/.ssh/id_rsa:
Identity added: /home/itoutline/.ssh/id_rsa (/home/itoutline/.ssh/id_rsa)
</code></pre>

<p>Wejście na centos-03 odbędzie się już bez podawania żadnych poświadczeń:</p>

<pre><code>[itoutline@centos-01 ~]$ ssh centos-03
Last login: Sun Mar 31 11:20:40 2013 from centos-01.local
[itoutline@centos-03 ~]$
</code></pre>

<h4>Modyfikacja &ldquo;passphrase&rdquo;</h4>

<p>Następujące polecenie umożliwia dodanie, usunięcie lub zmianę &ldquo;passphrase&rdquo; w przypadku istniejących kluczy:</p>

<p><code>ssh-keygen -p -f $HOME/.ssh/id_rsa</code></p>

<pre><code>[itoutline@centos-01 ~]$ ssh-keygen -p -f $HOME/.ssh/id_rsa
Enter old passphrase:
Key has comment '/home/itoutline/.ssh/id_rsa'
Enter new passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved with the new passphrase.
</code></pre>

<h4>Uruchamianie aplikacji graficznych przez SSH</h4>

<p>Na maszynach wirtualnych instaluję z reguły minimalną wersję systemu plus to co akurat chce sprawdzić. Rzadko kiedy pojawia się konieczność skorzystania z grafiki a jeśli już to wystarczy doinstalować tylko środowisko X. Dzięki czemu wirtualna maszyna jest &ldquo;lżejsza&rdquo;.</p>

<p>Nawiązanie sesji SSH ze wsparciem dla X-ów <code>ssh -X centos-03</code></p>

<p>Po stronie serwera w konfiguracji <code>/etc/ssh/sshd_config</code> musi znaleźć się linia <code>X11Forwarding yes</code></p>

<p>Uruchomienie linuxowego kalkulatora na pulpicie OSX (XQuartz musi być zainstalowany i uruchomiony):</p>

<pre><code>[itoutline.sputnik: itoutline]$ ssh -X centos-01
Last login: Sun Mar 31 15:08:49 2013 from sputnik.local
[itoutline@centos-01 ~]$ gcalctool &amp;
</code></pre>

<p><img src="/images/Calculator.png"></p>

<p>Jeśli pojawia się poniższy problem:</p>

<pre><code>(gcalctool:3141): Gtk-WARNING **: cannot open display:
</code></pre>

<p>Może oznaczać, że zmienna <code>DISPLAY</code> na kliencie nie jest ustawiona, można to naprawić dodając poniższą linię do <code>.bash_profile</code> lub <code>.bashrc</code></p>

<pre><code>export DISPLAY=:0
</code></pre>
]]></content>
  </entry>
  
</feed>
